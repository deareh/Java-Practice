//1
class Solution {
    public int countRangeSum(int[] nums, int lower, int upper) 
    {
        int res=0;
        for(int i=0;i<nums.length;i++)
        {
            long sum=0;
            for(int j=i;j<nums.length;j++)
            {
                sum+=nums[j];
                if(sum>=lower&&sum<=upper)
                    res++;
            }
        }
        return res;
    }
}
//2
class Solution {
    public int countRangeSum(int[] nums, int lower, int upper) 
    {
        int res=0;
        long[] sum=new long[nums.length+1];
        for(int i=0;i<nums.length;i++)
        {
            sum[i+1]=sum[i]+nums[i];
        }
        return count(sum,lower,upper,0,sum.length-1);
    }
    public int count(long[] sum,int lower,int upper,int left, int right)
    {
        if(left==right)
            return 0;
        int mid=(left+right)/2;
        int leftCount=count(sum,lower,upper,left,mid);
        int rightCount=count(sum,lower,upper,mid+1,right);
        int res=leftCount+rightCount;

        int l=left;
        int m=mid+1;
        int r=mid+1;
        while(l<=mid)
        {
            while(m<=right&&sum[m]-sum[l]<lower)
            {
                m++;
            }
            while(r<=right&&sum[r]-sum[l]<=upper)
            {
                r++;
            }
            res+=r-m;
            l++;
        }
        long[] sorted=new long[right-left+1];
        int tem=left;
        int i=0;
        int j=mid+1;
        for(;left<=mid&&j<=right;i++)
        {
            if(sum[left]<=sum[j])
            {
                sorted[i]=sum[left];
                left++;
            }
            else
            {
                sorted[i]=sum[j];
                j++;
            }
        }
        if(left<=mid)
        {
            for(;left<=mid;left++)
                sorted[i++]=sum[left];
        }
        if(j<=right)
        {
            for(;j<=right;j++)
                sorted[i++]=sum[j];
        }
        for(var k=0;k<sorted.length;k++)
        {
            sum[tem+k]=sorted[k];
        }
        return res;
    }
}
