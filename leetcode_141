/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
 //1
public class Solution {
    public boolean hasCycle(ListNode head) 
    {
        Set<ListNode> map =new HashSet<>();
        while(head!=null)    
        {
            if(map.contains(head))
            {
                return true;
            }
            else
            {
                map.add(head);
            }
            head=head.next;
        }
        return false;
    }
}
//2
public class Solution {
    public boolean hasCycle(ListNode head) 
    {
        var fast=head;
        while(fast!=null&&fast.next!=null)    
        {
            fast=fast.next.next;
            head=head.next;
            if(fast==head)
            {
                return true;
            }
        }
        return false;
    }
}
