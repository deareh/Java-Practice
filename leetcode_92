/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        ListNode header=new ListNode();
        header.next=head;
        ListNode pre=header;
        ListNode leftNode=head;
        int i=1;
        while(i<left){
            pre=leftNode;
            leftNode=leftNode.next;
            i++;
        }
        ListNode preNode=pre;
        while(i<=right){
            ListNode temp=leftNode.next;
            leftNode.next=preNode;
            preNode=leftNode;
            leftNode=temp;
            i++;
        }
        pre.next.next=leftNode;
        pre.next=preNode;
        return header.next;
    }
}
