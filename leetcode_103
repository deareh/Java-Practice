/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Deque<TreeNode> stack=new ArrayDeque<>();
        List<List<Integer>> res=new ArrayList<>();
        int flag=0;
        if(root!=null){
            stack.push(root);
            flag++;
        }
        while(!stack.isEmpty()){
            Deque<TreeNode> stack1=new ArrayDeque<>();
            List<Integer> list=new ArrayList<>();
            while(!stack.isEmpty()){
                TreeNode node=stack.pop();
                list.add(node.val);
                if(flag%2!=0){
                    if(node.left!=null){
                        stack1.push(node.left);
                    }
                    if(node.right!=null){
                        stack1.push(node.right);
                    }
                }else{
                    if(node.right!=null){
                        stack1.push(node.right);
                    }
                    if(node.left!=null){
                        stack1.push(node.left);
                    }
                }
            }
            res.add(list);
            stack=stack1;
            flag++;
        }
        return res;
    }
}
