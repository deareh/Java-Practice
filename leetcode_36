class Solution {
    public boolean isValidSudoku(char[][] board) 
    {
        for(var i=0;i<9;i++){
            int[] count=new int[10];
            for(var j=0;j<9;j++){
                if(board[i][j]!='.'){
                    if(count[board[i][j]-'0']==0){
                        count[board[i][j]-'0']=-1;
                    }else{
                        return false;
                    }
                }
            }
        }
        for(var i=0;i<9;i++){
            int[] count=new int[10];
            for(var j=0;j<9;j++){
                if(board[j][i]!='.'){
                    if(count[board[j][i]-'0']==0){
                        count[board[j][i]-'0']=-1;
                    }else{
                        return false;
                    }
                }
            }
        }
        for(int i=0;i<9;i+=3){
            for(int j=0;j<9;j+=3){
                if(!compare(board,i,j,3)){
                    return false;
                }
            }
        }
        return true;
    }
    public boolean compare(char[][] board,int h,int v,int row){
        int[] count=new int[10];
        for(var i=h;i<h+row;i++){
            for(var j=v;j<v+row;j++){
                if(board[i][j]!='.'){
                    if(count[board[i][j]-'0']==0){
                        count[board[i][j]-'0']=-1;
                    }else{
                        return false;
                    }
                }
            }
        }
        return true;
    }
}
