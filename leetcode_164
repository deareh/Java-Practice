class Solution {
    public int maximumGap(int[] nums) {
        if(nums.length<2)
            return 0;
        int max=Arrays.stream(nums).max().getAsInt();
        long exp=1;
        int[] buf=new int[nums.length];
        while(exp<=max)
        {
            int digit=0;
            int[] cnt=new int[10];
            for(int i=0;i<nums.length;i++)
            {
                digit=(nums[i]/(int)exp)%10;
                cnt[digit]++;
            }
            for(int i=1;i<10;i++)
                cnt[i]+=cnt[i-1];
            for(int i=nums.length-1;i>=0;i--)
            {
                digit=(nums[i]/(int)exp)%10;
                buf[cnt[digit]-1]=nums[i];
                cnt[digit]--;
            }
            exp*=10;
            nums=Arrays.copyOf(buf,buf.length);
        }
        int res=0;
        for(int i=1;i<nums.length;i++)
        {
            res=Math.max(res,nums[i]-nums[i-1]);
        }
        return res;
    }
}
