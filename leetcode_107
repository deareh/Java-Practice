/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) 
    {
        LinkedList<List<Integer>> list=new LinkedList<>();
        if(root==null)
            return list;
        Deque<TreeNode> deque=new ArrayDeque<>();
        deque.add(root);
        while(!deque.isEmpty())
        {
            int size=deque.size();
            List<Integer> nlist=new ArrayList<>();
            for(var i=0;i<size;i++)
            {
                TreeNode nroot=deque.poll();
                nlist.add(nroot.val);
                if(nroot.left!=null)
                    deque.add(nroot.left);
                if(nroot.right!=null)
                    deque.add(nroot.right);
            }
            list.offerFirst(nlist);
        }
        return list;
    }
}
