/*
1）建立一个空栈
2）读入数组直到结束
如果是（{[，则push入栈
如果是）}]，则pop出栈，如果是对应的（{[，则正确，否则返回false
3）结束后如果是空栈，则正确，否则错误
class Solution {
    public boolean isValid(String s) 
    {
        char[] schar=s.toCharArray();
        if (schar.length==0)
        return true;
        var stack=new ArrayDeque();
        for (var i:schar)
        {
            switch(i)
            {
                case('('):
                stack.push('(');
                break;
                case(')'):
				{
                    if (stack.isEmpty())
                    return false;
					if(stack.pop().equals('('))
					break;
					return false;
				}
                case('['):
                stack.push('[');
                break;
                case(']'):
				{
                    if (stack.isEmpty())
                    return false;
					if(stack.pop().equals('['))
					break;
					return false;
				}
                case('{'):
                stack.push('{');
                break;
                case('}'):
				{
                    if (stack.isEmpty())
                    return false;
					if(stack.pop().equals('{'))
					break;
					return false;
				}
                default:
                return false;
            }
        }
        if (stack.isEmpty())
        return true;
        else
        return false;
    }
}
