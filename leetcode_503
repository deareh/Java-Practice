//1
class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int[] res=new int[nums.length];
        for(int i=0;i<nums.length;i++){
            int k=i;
            for(int j=1;j<=nums.length;j++){
                if(k+j>=nums.length){
                    k=-j;
                }
                if(nums[k+j]>nums[i]){
                    res[i]=nums[k+j];
                    break;
                }
                if(k+j==i){
                    res[i]=-1;
                }
            }
        }
        return res;
    }
}
//2
class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int[] res=new int[nums.length];
        Arrays.fill(res,-1);
        Deque<Integer> stack=new LinkedList<>();
        for(int i=0;i<2*nums.length-1;i++){
            while(!stack.isEmpty()&&nums[stack.peek()%nums.length]<nums[i%nums.length]){
                res[stack.pop()%nums.length]=nums[i%nums.length];
            }
            stack.push(i%nums.length);
        }
        return res;
    }
}
