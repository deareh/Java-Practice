class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) 
    {
        int len1=nums1.length;
        int len2=nums2.length;
        int len=len1+len2;
        if(len%2==1)
            return getres(nums1,nums2,len/2+1);
        else
            return (double)(getres(nums1,nums2,len/2)+getres(nums1,nums2,len/2+1))/2.0;
    }
    public int getres(int[] a,int[] b,int k)
    {
        int lena=a.length,lenb=b.length;
        int starta=0,startb=0;
        while(true)
        {
            if(starta==lena)
                return b[startb+k-1];
            if(startb==lenb)
                return a[starta+k-1];
            if(k==1)
                return Math.min(a[starta],b[startb]);
            
            int indexa=Math.min(starta+k/2,lena)-1;
            int indexb=Math.min(startb+k/2,lenb)-1;
            if(a[indexa]<b[indexb])
            {
                k-=indexa-starta+1;
                starta=indexa+1;
            }
            else
            {
                k-=indexb-startb+1;
                startb=indexb+1;
            }
        }
        
    }
}
