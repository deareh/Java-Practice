class Solution {
    public boolean search(int[] nums, int target) {
        int start=0;
        int end=nums.length-1;
        while(start<end-1){
            int mid=(start+end)/2;
            if(nums[mid]==nums[start]&&nums[mid]==nums[end]){
                end--;
            }
            else if(nums[mid]>=nums[start]){
                start=mid;
            }else{
                end=mid;
            }
        }
        if(nums[start]<nums[end]){
            start++;
            end++;
            if(end>=nums.length){
                end--;
            }
        }
        if(target>=nums[0]&&target<=nums[start]){
            return searchmid(nums,0,start,target);
        }else{
            return searchmid(nums,end,nums.length-1,target);
        }
    }
    public boolean searchmid(int[] nums,int start,int end,int target){
        while(start<=end){
            int mid=(start+end)/2;
            if(nums[mid]>target){
                end=mid-1;
            }else if(nums[mid]<target){
                start=mid+1;
            }else{
                return true;
            }
        }
        return false;
    }
}
