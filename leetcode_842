class Solution {
    public List<Integer> splitIntoFibonacci(String S) {
        List<Integer> list=new ArrayList<>();
        backtrace(list,S,S.length(),0,0,0);
        return list;
    }
    public boolean backtrace(List<Integer> list,String s,int len,int index,int sum,int pre){
        if(index==len)
            return list.size()>=3;
        long curlong=0;
        for(int i=index;i<len;i++){
            if(i>index&&s.charAt(index)=='0')
                break;
            curlong=curlong*10+s.charAt(i)-'0';
            if(curlong>Integer.MAX_VALUE)
                break;
            int cur=(int)curlong;
            if(list.size()>=2){
                if(cur<sum)
                    continue;
                else if(cur>sum)
                    break;
            }
            list.add(cur);
            if(backtrace(list,s,len,i+1,cur+pre,cur))
                return true;
            else
                list.remove(list.size()-1);
        }
        return false;
    }
}
