//1
class Solution {
    public int[] searchRange(int[] nums, int target) 
    {
        int[] res=new int[]{-1,-1};
        if(nums.length==0)
            return res;
        int i=0;
        while(i<nums.length&&nums[i]<=target)
        {
            if(target==nums[i])
            {
                res[0]=i;
                while(i<nums.length&&target==nums[i])
                {
                    i++;
                }
                res[1]=i-1;
                return res;
            }
            i++;
        }
        return new int[]{-1,-1};
    }
}
//2
class Solution {
    public int[] searchRange(int[] nums, int target) 
    {
        int[] res=new int[]{-1,-1};
        if(nums.length==0||target<nums[0]||target>nums[nums.length-1])
            return res;
        int first=0;
        int last=nums.length-1;
        int mid=0;
        while(first<=last)
        {
            mid=(first+last)/2;
            if(nums[mid]>target)
                last=mid-1;
            else if(nums[mid]<target)
                first=mid+1;
            else
            {
                while(mid>=0&&nums[mid]==target)
                {
                    mid--;
                }
                mid++;
                res[0]=mid;
                while(mid<nums.length&&nums[mid]==target)
                {
                    mid++;
                }
                res[1]=mid-1;
                return res;
            }
        }
        return new int[]{-1,-1};
    }
}
